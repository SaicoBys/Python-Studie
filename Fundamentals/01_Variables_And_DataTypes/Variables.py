# ========================================
# Variables en Python
# ========================================

"""
## üìå Descripci√≥n
Las **variables** en Python son contenedores que almacenan datos.  
No necesitan declaraci√≥n previa ni especificar el tipo de dato.

üìå **Caracter√≠sticas principales de las variables en Python:**
- Se crean al asignarles un valor (`=`).
- Pueden cambiar de tipo en tiempo de ejecuci√≥n (tipado din√°mico).
- No requieren una declaraci√≥n expl√≠cita como en otros lenguajes (`int`, `string`, etc.).
- Sensibles a may√∫sculas y min√∫sculas (`edad` ‚â† `Edad`).
"""

# ========================================
# Declaraci√≥n y asignaci√≥n de variables
# ========================================

# Asignaci√≥n de diferentes tipos de datos a variables
nombre = "Alice"  # Variable tipo string (cadena de texto)
edad = 25         # Variable tipo int (entero)
altura = 1.75     # Variable tipo float (decimal)
es_estudiante = True  # Variable tipo bool (booleano)

# Imprimir valores
print(nombre)  # Salida: Alice
print(edad)    # Salida: 25
print(altura)  # Salida: 1.75
print(es_estudiante)  # Salida: True

# ========================================
# Tipado din√°mico en Python
# ========================================

"""
Python permite cambiar el tipo de dato de una variable durante la ejecuci√≥n.
"""

dato = 10        # `dato` es un entero
print(dato)      # Salida: 10

dato = "Hola"    # Ahora `dato` es un string (cambia de int a string)
print(dato)      # Salida: Hola

dato = 3.14      # Ahora `dato` es un float (cambia de string a float)
print(dato)      # Salida: 3.14

# ========================================
# Reasignaci√≥n de variables
# ========================================

"""
Podemos reasignar el valor de una variable en cualquier momento.
"""

mi_variable = "Python"
print(mi_variable)  # Salida: Python

mi_variable = 2024
print(mi_variable)  # Salida: 2024

# ========================================
# Nombrado de variables y convenciones
# ========================================

"""
Reglas para nombrar variables en Python:
‚úÖ Puede contener letras, n√∫meros y guiones bajos (`_`).
‚úÖ No puede comenzar con un n√∫mero (`3variable` ‚ùå).
‚úÖ No puede contener espacios (`mi variable` ‚ùå ‚Üí `mi_variable` ‚úÖ).
‚úÖ No puede ser una palabra reservada (`def`, `class`, `if`, etc.).
"""

# Nombres v√°lidos
mi_variable = "Hola"
_variable = 42
nombre_completo = "John Doe"

# Nombres inv√°lidos (descomentar para ver errores)
# 3variable = "Error"   ‚ùå No puede empezar con n√∫mero
# mi variable = 10       ‚ùå No puede contener espacios
# def = "Error"          ‚ùå No puede ser una palabra reservada

# ========================================
# Uso de variables en expresiones
# ========================================

"""
Las variables pueden usarse en operaciones matem√°ticas y concatenaciones de strings.
"""

# Operaciones matem√°ticas
a = 10  # tipo int
b = 5   # tipo int
suma = a + b  # int + int
multiplicacion = a * b  # int * int

print(suma)          # Salida: 15
print(multiplicacion)  # Salida: 50

# Concatenaci√≥n de strings
saludo = "Hola, " + nombre  # string + string
print(saludo)  # Salida: Hola, Alice

# ========================================
# Resumen
# ========================================

"""
## üìå Resumen
- En Python, las variables se crean asignando un valor con `=`.
- No necesitan declaraci√≥n previa ni especificar tipo.
- Pueden cambiar de tipo durante la ejecuci√≥n (tipado din√°mico).
- Se pueden usar en operaciones matem√°ticas y concatenaciones de texto.
- Deben seguir ciertas reglas de nombrado para ser v√°lidas.
"""

# ========================================
# Fin del Documento
# ========================================