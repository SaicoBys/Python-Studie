# ========================================
# Control de Flujo en Bucles: Break y Continue
# ========================================

"""
## üìå Descripci√≥n
Las declaraciones `break` y `continue` se usan para modificar el flujo de control dentro de los bucles.

üìå **Diferencias principales:**
- `break` **detiene** el bucle inmediatamente.
- `continue` **omite** el resto del c√≥digo en la iteraci√≥n actual y pasa a la siguiente.

üìå **Casos de uso comunes:**
- `break`: Se usa cuando encontramos un resultado espec√≠fico y queremos salir del bucle.
- `continue`: Se usa cuando queremos omitir ciertas iteraciones sin detener el bucle por completo.
"""

# ========================================
# Uso de 'break' en una b√∫squeda
# ========================================

"""
`break` se usa cuando queremos detener un bucle una vez que encontramos un resultado espec√≠fico.
"""

nombres = ["Ana", "Luis", "Carlos", "Elena"]
nombre_buscado = "Carlos"

for nombre in nombres:
    if nombre == nombre_buscado:
        print(f"Encontrado: {nombre}")
        break  # Se detiene la b√∫squeda una vez encontrado
    print(f"Buscando... {nombre}")

# Salida:
# Buscando... Ana
# Buscando... Luis
# Encontrado: Carlos

# ========================================
# Uso de 'continue' para omitir elementos
# ========================================

"""
`continue` se usa cuando queremos omitir ciertas iteraciones sin detener el bucle.
"""

usuarios = [
    {"nombre": "Ana", "activo": True},
    {"nombre": "Luis", "activo": False},
    {"nombre": "Carlos", "activo": True},
    {"nombre": "Elena", "activo": False},
]

for usuario in usuarios:
    if not usuario["activo"]:
        continue  # Salta los usuarios desactivados
    print(f"Enviando notificaci√≥n a {usuario['nombre']}")

# Salida:
# Enviando notificaci√≥n a Ana
# Enviando notificaci√≥n a Carlos

# ========================================
# Uso de 'break' en un bucle for con n√∫meros
# ========================================

"""
Podemos usar `break` para detener la ejecuci√≥n de un bucle cuando se cumpla una condici√≥n.
"""

for num in range(10):
    if num == 5:
        print("N√∫mero 5 encontrado, saliendo del bucle.")
        break  # Se detiene la ejecuci√≥n cuando num es 5
    print(num)

# Salida: 0, 1, 2, 3, 4, "N√∫mero 5 encontrado, saliendo del bucle."

# ========================================
# Uso de 'continue' en un bucle for con n√∫meros
# ========================================

"""
Podemos usar `continue` para saltar iteraciones en un bucle.
"""

for num in range(10):
    if num % 2 == 0:
        continue  # Salta los n√∫meros pares
    print(num)

# Salida: 1, 3, 5, 7, 9

# ========================================
# Resumen
# ========================================

"""
## üìå Resumen
- `break` permite salir de un bucle inmediatamente cuando se cumple una condici√≥n.
- `continue` omite el resto del c√≥digo en una iteraci√≥n y pasa a la siguiente.
- Se pueden usar en bucles `for` y `while` para controlar la ejecuci√≥n.
- `break` es √∫til para detener b√∫squedas o procesos cuando se encuentra un resultado.
- `continue` es √∫til para omitir elementos no deseados sin detener el bucle.
"""

# ========================================
# Ejercicios de Pr√°ctica
# ========================================

"""
## üß† Ejercicios de pr√°ctica para Break y Continue

1Ô∏è‚É£ Buscar el primer m√∫ltiplo de 7 (break). Recorre una lista de n√∫meros del 1 al 20. Det√©n el bucle al encontrar el primer m√∫ltiplo de 7.

2Ô∏è‚É£ Imprimir del 1 al 10 omitiendo m√∫ltiplos de 3. Imprime los n√∫meros del 1 al 10, pero omite los m√∫ltiplos de 3.

3Ô∏è‚É£ Buscar un nombre en una lista y detenerse al encontrarlo. Recorre una lista de nombres y det√©n el bucle cuando encuentres "Elena".

4Ô∏è‚É£ Filtrar usuarios activos. Crea una lista de usuarios con un campo "activo". Imprime solo los nombres de los usuarios activos (usa continue). (Este ejercicio ser√° desarrollado cuando veas diccionarios)

5Ô∏è‚É£ Detener bucle al llegar a 10. Imprime los n√∫meros del 1 al 15. Si el n√∫mero es 10, muestra "Interrumpido en 10" y termina el bucle.

‚úÖ Prueba a resolver cada uno con lo aprendido sobre `break` y `continue`.
"""

# --------------------------------------------------
# 1Ô∏è‚É£ Buscar el primer m√∫ltiplo de 7 (break)
# --------------------------------------------------

for num in range(1, 21):
    if num % 7 == 0:
        print(f"El n√∫mero {num} es m√∫ltiplo de 7")
        break
    else:
        print(f"Buscando... {num}")

# --------------------------------------------------
# 2Ô∏è‚É£ Imprimir del 1 al 10 omitiendo m√∫ltiplos de 3
# --------------------------------------------------

for multi in range(1, 11):
    if multi % 3 == 0:
        continue
    print(f"{multi} no es m√∫ltiplo de 3")

# --------------------------------------------------
# 3Ô∏è‚É£ Buscar un nombre en una lista y detenerse al encontrarlo
# --------------------------------------------------

nombres = ["Jacob", "Nicole", "Alejandrina", "Elena", "Fabiola", "Tatis"]
buscar = "Elena"

for nombre in nombres:
    if nombre == buscar:
        print(f"Nombre encontrado: {nombre}")
        break
    else:
        print(nombre)

# --------------------------------------------------
# 4Ô∏è‚É£ Filtrar usuarios activos
# --------------------------------------------------

# üîí Este ejercicio requiere diccionarios. Lo resolveremos m√°s adelante:
# usuarios = [{"nombre": "Ana", "activo": True}, ...]

# --------------------------------------------------
# 5Ô∏è‚É£ Detener bucle al llegar a 10
# --------------------------------------------------

for numero in range(1, 16):
    if numero == 10:
        print("Interrumpido en 10")
        break
    print(numero)

# ========================================
# Fin del Documento
# ========================================